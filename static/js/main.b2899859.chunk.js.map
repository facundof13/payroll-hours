{"version":3,"sources":["components/hourlyRate.js","components/datePickers.js","components/timeRow.js","components/tableLayout.js","components/calculator.js","components/madeBy.js","App.js","serviceWorker.js","index.js"],"names":["HourlyRate","props","rate","this","type","value","onChange","e","onRateChange","React","Component","DatePickers","className","todayButton","selected","firstDate","onDateChange","secondDate","weekdays","0","1","2","3","4","5","6","TimeRow","state","inHour","inMinute","inAMorPM","outHour","outMinute","outAMorPM","breakStartHour","breakStartMinute","breakStartAMorPM","breakEndHour","breakEndMinute","breakEndAMorPM","handleChange","bind","fixText","persist","target","length","setState","name","checkIfAllSatisfied","separateHours","newNumber","inDate","moment","Date","date","hour","minute","add","outDate","console","log","breakStartDate","breakEndDate","findHoursWorked","mainHours","diff","sendHours","hours","Math","floor","minutes","day","placeholder","onBlur","TableLayout","receiveHoursInDay","adjustArray","dateArr","map","info","key","Calculator","sumHours","sumMinutes","handleDateChange","calculateTotalHours","which","findDifferenceOfDays","isBefore","isAfter","daysDifference","populateArray","i","push","format","sort","a","b","arr","newArr","filter","item","Number","totalHours","totalMinutes","totalhours","obj","toLocaleString","style","currency","MadeBy","href","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.b2899859.chunk.js","sourcesContent":["import React from 'react'\n\nexport default class HourlyRate extends React.Component {\n  constructor(props) {\n    super(props)\n  }\n\n  render() {\n    const rate = this.props.rate\n    return (\n      <div>\n        <label>Enter hourly pay rate:</label>\n        <input type='number' value={rate} onChange={(e) => { this.props.onRateChange(e) }}></input>\n      </div>\n    )\n  }\n}","import React from 'react'\nimport DatePicker from 'react-datepicker'\nimport \"react-datepicker/dist/react-datepicker.css\";\n\nexport default class DatePickers extends React.Component {\n  constructor(props) {\n    super(props)\n  }\n\n  render() {\n    return (\n      <div className='pickers'>\n        <div>\n        <label>Enter a starting payroll date:</label>\n        <DatePicker\n          todayButton=\"Today\"\n          selected={this.props.firstDate}\n          onChange={(e) => { this.props.onDateChange(e, 'firstDate') }}\n        />\n        </div>\n        <div>\n        <label>Enter an ending date:</label>\n        <DatePicker\n          todayButton=\"Today\"\n          selected={this.props.secondDate}\n          onChange={(e) => { this.props.onDateChange(e, 'secondDate') }}\n      />\n        </div>\n      </div>\n    )\n  }\n}","import React from \"react\";\nimport moment from \"moment\";\n\nconst weekdays = {\n  0: 'Sunday',\n  1: 'Monday',\n  2: 'Tuesday',\n  3: 'Wednesday',\n  4: 'Thursday',\n  5: 'Friday',\n  6: 'Saturday'\n}\n\nexport default class TimeRow extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      inHour: \"\",\n      inMinute: \"\",\n      inAMorPM: \"AM\",\n      outHour: \"\",\n      outMinute: \"\",\n      outAMorPM: \"PM\",\n      breakStartHour: \"\",\n      breakStartMinute: \"\",\n      breakStartAMorPM: \"PM\",\n      breakEndHour: \"\",\n      breakEndMinute: \"\",\n      breakEndAMorPM: \"PM\"\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.fixText = this.fixText.bind(this);\n  }\n\n  handleChange(e) {\n    e.persist();\n    if (e.target.value.length <= 2) {\n      this.setState(\n        function() {\n          return {\n            [e.target.name]: e.target.value\n          };\n        },\n        () => {\n          if (this.checkIfAllSatisfied()) {\n            this.separateHours();\n          }\n        }\n      );\n    }\n  }\n\n  fixText(e) {\n    e.persist();\n    if (e.target.value.length == 1) {\n      this.setState(function() {\n        let newNumber = `0${e.target.value}`;\n        return {\n          [e.target.name]: newNumber\n        };\n      });\n    }\n  }\n\n  checkIfAllSatisfied() {\n    return (\n      this.state.inHour !== \"\" &&\n      this.state.inMinute !== \"\" &&\n      this.state.outHour !== \"\" &&\n      this.state.outMinute !== \"\"\n    );\n  }\n\n  separateHours() {\n    //in times\n    let inDate = moment(new Date(this.props.date));\n    inDate.hour(this.state.inHour);\n    inDate.minute(this.state.inMinute);\n    if (this.state.inAMorPM === \"PM\") {\n      inDate.add(12, \"hours\");\n    }\n\n    //out times\n    let outDate = moment(new Date(this.props.date));\n    outDate.hour(this.state.outHour);\n    outDate.minute(this.state.outMinute);\n    if (this.state.outAMorPM === \"PM\") {\n      outDate.add(12, \"hours\");\n    }\n\n    console.log(this.state.breakStartMinute !== \"\" && this.state.breakEndMinute !== \"\") \n    if (this.state.breakStartMinute !== \"\" && this.state.breakEndMinute !== \"\") {\n      //break start time\n      let breakStartDate = moment(this.props.date);\n      breakStartDate.hour(this.state.breakStartHour);\n      breakStartDate.minute(this.state.breakStartMinute);\n      if (this.state.breakStartAMorPM === \"PM\") {\n        breakStartDate.add(12, \"hours\");\n      }\n\n      //break end time\n      let breakEndDate = moment(this.props.date);\n      breakEndDate.hour(this.state.breakEndHour);\n      breakEndDate.minute(this.state.breakEndMinute);\n      if (this.state.breakEndAMorPM === \"PM\") {\n        breakEndDate.add(12, \"hours\");\n      }\n      // console.log(`Break Start time: ${breakStartDate.format(\"LT\")}`);\n      // console.log(`Break End time: ${breakEndDate.format(\"LT\")}`);\n      this.findHoursWorked(inDate, outDate, breakStartDate, breakEndDate);\n    } else {\n      this.findHoursWorked(inDate, outDate, 0, 0);\n    }\n\n    // console.log(`In time: ${inDate.format(\"LT\")}`);\n    // console.log(`Out time: ${outDate.format(\"LT\")}`);\n  }\n\n  findHoursWorked(inDate, outDate, breakStartDate, breakEndDate) {\n    let mainHours = outDate.diff(inDate) / 3600000;\n    if (breakStartDate && breakEndDate) {\n      let breakHours = breakEndDate.diff(breakStartDate) / 3600000;\n      mainHours -= breakHours\n    }\n\n    this.props.sendHours({\n      date: this.props.date,\n      hours: Math.floor(mainHours),\n      minutes: Math.floor((mainHours - Math.floor(mainHours)) * 60)\n    });\n  }\n\n  render() {\n    return (\n      <tr>\n        <td>{weekdays[moment(this.props.date).day()] + ', ' + this.props.date}</td>\n        <td>\n          <input\n            type=\"text\"\n            name=\"inHour\"\n            placeholder=\"00\"\n            value={this.state.inHour}\n            onChange={this.handleChange}\n            onBlur={this.fixText}\n          ></input>\n          <span>:</span>\n          <input\n            type=\"text\"\n            name=\"inMinute\"\n            placeholder=\"00\"\n            value={this.state.inMinute}\n            onChange={this.handleChange}\n            onBlur={this.fixText}\n          ></input>\n          <select\n            name=\"inAMorPM\"\n            value={this.state.inAMorPM}\n            onChange={this.handleChange}\n          >\n            <option value=\"AM\">AM</option>\n            <option value=\"PM\">PM</option>\n          </select>\n        </td>\n        <td>\n          <input\n            type=\"text\"\n            name=\"outHour\"\n            placeholder=\"00\"\n            value={this.state.outHour}\n            onChange={this.handleChange}\n            onBlur={this.fixText}\n          ></input>\n          <span>:</span>\n          <input\n            type=\"text\"\n            name=\"outMinute\"\n            placeholder=\"00\"\n            value={this.state.outMinute}\n            onChange={this.handleChange}\n            onBlur={this.fixText}\n          ></input>\n          <select\n            name=\"outAMorPM\"\n            value={this.state.outAMorPM}\n            onChange={this.handleChange}\n          >\n            <option value=\"AM\">AM</option>\n            <option value=\"PM\">PM</option>\n          </select>\n        </td>\n        <td>\n          <input\n            type=\"text\"\n            name=\"breakStartHour\"\n            placeholder=\"00\"\n            value={this.state.breakStartHour}\n            onChange={this.handleChange}\n            onBlur={this.fixText}\n          ></input>\n          <span>:</span>\n          <input\n            type=\"text\"\n            name=\"breakStartMinute\"\n            placeholder=\"00\"\n            value={this.state.breakStartMinute}\n            onChange={this.handleChange}\n            onBlur={this.fixText}\n          ></input>\n          <select\n            name=\"breakStartAMorPM\"\n            value={this.state.breakStartAMorPM}\n            onChange={this.handleChange}\n          >\n            <option value=\"AM\">AM</option>\n            <option value=\"PM\">PM</option>\n          </select>\n          <input\n            type=\"text\"\n            name=\"breakEndHour\"\n            placeholder=\"00\"\n            value={this.state.breakEndHour}\n            onChange={this.handleChange}\n            onBlur={this.fixText}\n          ></input>\n          <span>:</span>\n          <input\n            type=\"text\"\n            name=\"breakEndMinute\"\n            placeholder=\"00\"\n            value={this.state.breakEndMinute}\n            onChange={this.handleChange}\n            onBlur={this.fixText}\n          ></input>\n          <select\n            name=\"breakEndAMorPM\"\n            value={this.state.breakEndAMorPM}\n            onChange={this.handleChange}\n          >\n            <option value=\"AM\">AM</option>\n            <option value=\"PM\">PM</option>\n          </select>\n        </td>\n        <td>\n          {this.props.hours !== \"\" ? (\n            this.props.hours + ' hours and ' + this.props.minutes + ' minutes'\n        ) : ''}\n        </td>\n      </tr>\n    );\n  }\n}","import React from \"react\";\nimport TimeRow from \"./timeRow\";\n\nexport default class TableLayout extends React.Component {\n  constructor(props) {\n    super(props);\n    console.log(this.props);\n\n    this.receiveHoursInDay = this.receiveHoursInDay.bind(this);\n  }\n\n  receiveHoursInDay(hours) {\n    //hours.totalMinutes\n    //hours.totalHours\n    this.props.adjustArray(hours);\n  }\n\n  render() {\n    return (\n      <div className='table-container'>\n        <table className=\"greyGridTable\">\n          <thead>\n            <tr>\n              <th>Date</th>\n              <th>In time</th>\n              <th>Out time</th>\n              <th>Break start and end times</th>\n              <th>Total</th>\n            </tr>\n          </thead>\n          <tbody>\n            {this.props.dateArr.map(info => (\n              <TimeRow\n                key={info.date}\n                sendHours={this.receiveHoursInDay}\n                date={info.date}\n                hours={info.hours}\n                minutes={info.minutes}\n              />\n            ))}\n          </tbody>\n        </table>\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport HourlyRate from \"./hourlyRate\";\nimport DatePickers from \"./datePickers\";\nimport moment from \"moment\";\nimport TableLayout from \"./tableLayout\";\nexport default class Calculator extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      rate: 13,\n      firstDate: null,\n      secondDate: null,\n      dateArr: [],\n      sumHours: 0,\n      sumMinutes: 0\n    };\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleDateChange = this.handleDateChange.bind(this);\n    this.adjustArray = this.adjustArray.bind(this);\n    this.calculateTotalHours = this.calculateTotalHours.bind(this);\n  }\n\n  handleChange(e) {\n    this.setState({ rate: e.target.value });\n  }\n\n  handleDateChange(e, which) {\n    // do date checking in datePickers component\n    this.setState(\n      {\n        [which]: e,\n        dateArr: []\n      },\n      () => {\n        this.findDifferenceOfDays();\n      }\n    );\n  }\n\n  findDifferenceOfDays() {\n    if (this.state.firstDate && this.state.secondDate) {\n      if (\n        !moment(this.state.secondDate).isBefore(moment(this.state.firstDate)) &&\n        !moment(this.state.firstDate).isAfter(moment(this.state.secondDate))\n      ) {\n        this.setState(\n          {\n            daysDifference:\n              moment(this.state.secondDate).diff(\n                moment(this.state.firstDate),\n                \"days\"\n              ) + 1\n          },\n          () => {\n            this.populateArray();\n          }\n        );\n      }\n    }\n  }\n\n  populateArray() {\n    let dateArr = [];\n    for (let i = 0; i < this.state.daysDifference; i++) {\n      dateArr.push({\n        date: moment(this.state.firstDate)\n          .add(i, \"d\")\n          .format(\"MMMM DD YYYY\"),\n        hours: \"\",\n        minutes: \"\"\n      });\n      dateArr.sort((a, b) => {\n        return moment(a.date).isAfter(moment(b.date));\n      });\n    }\n    this.setState({ dateArr: dateArr });\n  }\n\n  adjustArray(hours) {\n    console.log(hours);\n    let arr = [...this.state.dateArr];\n    let newArr = [...arr.filter(item => item.date !== hours.date), hours];\n\n    newArr.sort((a, b) => {\n      return moment(a.date).isAfter(moment(b.date));\n    });\n    this.setState(() => ({\n      dateArr: [...newArr]\n    }));\n  }\n\n  calculateTotalHours() {\n    let sumHours = 0;\n    let sumMinutes = 0;\n    this.state.dateArr.map(item => {\n      if (item.hours) {\n        sumHours += Number(item.hours);\n      }\n      if (item.minutes) {\n        sumMinutes += Number(item.minutes);\n      }\n    });\n    let totalHours = sumHours + Math.floor(sumMinutes / 60);\n    let totalMinutes = sumMinutes % 60;\n    console.log(`Hours: ${totalHours} Minutes: ${totalMinutes}`);\n    return { totalhours: totalHours, totalMinutes: totalMinutes };\n  }\n\n  render() {\n    let obj = this.calculateTotalHours();\n    return (\n      <div>\n        <HourlyRate onRateChange={this.handleChange} rate={this.state.rate} />\n        <DatePickers\n          firstDate={this.state.firstDate}\n          secondDate={this.state.secondDate}\n          onDateChange={this.handleDateChange}\n        />\n        <TableLayout\n          dateArr={this.state.dateArr}\n          adjustArray={this.adjustArray}\n        />\n        {obj.totalhours > 0 ? (\n          <div className=\"totalPay\">\n            <p>\n              {obj.totalhours + \" hours and \" + obj.totalMinutes + \" minutes\"}\n            </p>\n          </div>\n        ) : (\n          \"\"\n        )}\n        <p>\n          Total Pay (before taxes):{\" \"}\n          <strong>\n            {(\n              obj.totalhours * this.state.rate +\n              obj.totalMinutes * (this.state.rate / 60)\n            ).toLocaleString(\"en-US\", { style: \"currency\", currency: \"USD\" })}\n          </strong>\n        </p>\n      </div>\n    );\n  }\n}\n","import React from 'react'\n\nexport default class MadeBy extends React.Component {\n  render() {\n    return (\n      <footer>Made by Facundo Figueroa. Check out the repo on <a href='https://github.com/facundof13/payroll-hours' target=\"_blank\">github</a></footer>\n    )\n  }\n}","import React from 'react';\nimport './App.css';\nimport Calculator from './components/calculator'\nimport MadeBy from './components/madeBy'\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Calculator className='main-app'/>\n      <MadeBy />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}